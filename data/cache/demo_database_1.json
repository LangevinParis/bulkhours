{
    "bulk_free_info": {
        "subject": "bulk_free",
        "virtual_room": "room1",
        "email": "guillaume.therin@gmail.com",
        "notebook_id": "C1_Overview",
        "global": {
            "admins": "guillaume.therin@gmail.com",
            "room1": "stephane.roberdet@ipsa.fr;elodie.roullot@esme.fr;maxime.cruzel@ipsa.fr;charline.potier@ipsa.fr;omar.al-hammal@ipsa.fr;thi-hanh.nguyen@ipsa.fr",
            "room2": "",
            "restricted": false,
            "language": "fr",
            "virtual_rooms": "room1;room2",
            "chatgpt": false,
            "norm20": false
        },
        "notebooks": {
            "C1_Overview": {
                "page": "https://colab.research.google.com/drive/1ui5HIUAYKAkOP74u9udVkopFFcYcBUab#scrollTo=u2Cv3eRM4Tg8",
                "evaluation": "",
                "virtual_room": "room1",
                "exercices": "cpp;isly;cgpt;aimg;quizz;gini"
            }
        },
        "TP1a": {
            "exercices": "",
            "evaluation": "",
            "page": ""
        },
        "C1_Overview": {
            "exercices": "",
            "evaluation": "",
            "page": ""
        }
    },
    "bulk_free_room1_TP1a_signp": {
        "omar.al-hammal@ipsa.fr": {
            "main_execution": "import numpy as np \n\ndef sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar or numpy array of any size\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Fill the dots\n    s = 1/(1 + np.exp(-x))\n    \n    return s\n\nx = np.array([1, 2, 3])\nprint(\"sigmoid([1, 2, 3])=\", sigmoid(x))\n\n#student_evaluation_function()\n",
            "answer": "import numpy as np \n\ndef sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar or numpy array of any size\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Fill the dots\n    s = 1/(1 + np.exp(-x))\n    \n    return s\n\nx = np.array([1, 2, 3])\nprint(\"sigmoid([1, 2, 3])=\", sigmoid(x))\n\n#student_evaluation_function()\n",
            "atype": "bkcode",
            "user": "omar.al-hammal@ipsa.fr",
            "update_time": "2023-06-23 13:18:06"
        }
    },
    "bulk_free_room1_C1_Overview_signp": {
        "guillaume.therin@gmail.com": {
            "main_execution": "import numpy as np \n\ndef sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar or numpy array of any size\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Fill the dots\n    s = 1/(1 + np.exp(-x))\n    \n    return s\n\nx = np.array([1, 2, 3])\nprint(\"sigmoid([1, 2, 3])=\", sigmoid(x))\n\n#student_evaluation_function()\n",
            "answer": "import numpy as np \n\ndef sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar or numpy array of any size\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Fill the dots\n    s = 1/(1 + np.exp(-x))\n    \n    return s\n\nx = np.array([1, 2, 3])\nprint(\"sigmoid([1, 2, 3])=\", sigmoid(x))\n\n#student_evaluation_function()\n",
            "atype": "bkcode",
            "user": "guillaume.therin@gmail.com",
            "update_time": "2023-06-23 14:07:50"
        },
        "solution": {
            "main_execution": "import numpy as np \n\ndef sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar or numpy array of any size\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Fill the dots\n    s = 1/(1 + np.exp(-x))\n    \n    return s\n\nx = np.array([1, 2, 3])\nprint(\"sigmoid([1, 2, 3])=\", sigmoid(x))\n\n#student_evaluation_function()\n",
            "explanation": "def student_explanation_function(show_code=False):\n    bulkhours.html(\"<h1>Example of a sigmoid function</h1>\")\n    x = np.linspace(-7, 7, 1000)\n    plt.plot(x, sigmoid(x), label=\"Sigmoid function\");\n    plt.legend();\n\n",
            "evaluation": "def student_evaluation_function(show_note=True):\n    return bulkhours.is_equal(data_test=student.sigmoid(student.x), max_score=5.0, policy=\"strict\", error=1e-8, data_ref=teacher.sigmoid(teacher.x), min_score=0)\n\n\n",
            "answer": "import numpy as np \n\ndef sigmoid(x):\n    \"\"\"\n    Compute the sigmoid of x.\n\n    :param x: a scalar or numpy array of any size\n    :return: s  sigmoid(x)\n    \"\"\"\n    \n    # Fill the dots\n    s = 1/(1 + np.exp(-x))\n    \n    return s\n\nx = np.array([1, 2, 3])\nprint(\"sigmoid([1, 2, 3])=\", sigmoid(x))\n\n#student_evaluation_function()\n",
            "atype": "bkcode",
            "visible": true,
            "user": "solution",
            "update_time": "2023-06-23 14:09:52",
            "note": 10
        }
    }
}