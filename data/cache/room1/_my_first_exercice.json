{
    "guillaume.therin@gmail.com": {
        "user": "guillaume.therin@gmail.com",
        "atype": "bkcode",
        "update_time": "2023-06-29 17:15:04",
        "main_execution": "import numpy as np\n\ndef square(x):\n    return x*x\n\nfor x in [1, 3, 7]:\n  print(f\"square({x})={square(x)}\")\n\n",
        "answer": "import numpy as np\n\ndef square(x):\n    return x*x\n\nfor x in [1, 3, 7]:\n  print(f\"square({x})={square(x)}\")\n\n",
        "note": 0
    },
    "solution": {
        "note": 10,
        "main_execution": "import numpy as np\n\ndef square(x):\n    return x*x\n\nfor x in [1, 3, 7]:\n  print(f\"square({x})={square(x)}\")\n\n",
        "answer": "import numpy as np\n\ndef square(x):\n    return x*x\n\nfor x in [1, 3, 7]:\n  print(f\"square({x})={square(x)}\")\n\n",
        "user": "solution",
        "explanation": "",
        "evaluation": "def student_evaluation_function():\n    score = 0\n    score += bulkhours.is_equal(data_test=student.square(2), data_ref=4, max_score=3.0, min_score=0)\n\n    score += bulkhours.is_equal(data_test=student.square(3), data_ref=teacher.square(3), max_score=3.0, min_score=0)\n\n    score += bulkhours.is_equal(data_test=student.square(np.array([5,6,7])), max_score=4.0, data_ref=teacher.square(np.array([5,6,7])), min_score=0)\n\n    return score  \n",
        "atype": "bkcode",
        "update_time": "2023-06-29 17:23:33",
        "visible": true
    }
}